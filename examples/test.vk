;quiz language


(define y-equals-mx-plus-b
  (equation
    (equality)
    (terms
      (variable (bind 'y))
    )
    (terms
      (op+
        (op*
          (constant integer)
          (variable (bind 'x))
        )
        (constant integer)
      )
    )
  )
)

(define test
  (equation
    (equality)
    (terms
      ((random-permute op+ op-)
        (variable)
        (constant integer)
      )
    )
    (terms
      (constant integer #f 0)
    )
  )
)

(define t
  (terms
    ((random-permute op+ op-)
      (constant integer)
      ((random-permute op* op/)
        (variable)
        (variable)
      )
    )
  )
)

(define exp2
  (equation
    (equality)
    t
    (terms ((random-permute op+ op+ op-) (constant integer)))
  )
)

(define exp3
  (equation
    (equality)
    (terms
      (op+
        ((random-permute (constant integer) (variable)))
        (constant integer)
      )
    )
    (terms
      (constant integer)
    )
  )
)

(print (extract-raw exp3))
(print (extract-raw (resolve-permutations exp3 0)))
(print (extract-raw (resolve-permutations exp3 1)))

(newline)
(print (extract-raw t))
(print (extract-raw (resolve-permutations t 0)))

(define exp4
  (equation
    (equality)
    (terms
      ((random-permute (op+ (constant integer) (variable)) (op- (variable) (variable) (variable))))
    )
    (terms
      (constant integer #f 0)
    )
  )
)

(print (extract-raw (terms (op+ (constant integer) (variable)))))

;(define i (generate y-equals-mx-plus-b))
